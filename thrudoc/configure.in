AC_PREREQ(2.61)

AC_INIT([thrudoc], [0.1], [bugs@thrudb.org])
AC_CONFIG_AUX_DIR(config)
AM_INIT_AUTOMAKE
AC_CONFIG_SRCDIR([thrudoc_config.h.in])
AC_CONFIG_HEADER(thrudoc_config.h)
PKG_PROG_PKG_CONFIG

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LIBTOOL
AC_PROG_MAKE_SET

AC_LANG(C++)

# thrift(nb) and related requirements
AC_PATH_PROG(THRIFT, thrift, no, $PATH:/usr/local/bin:/usr/bin)
if test "x$THRIFT" = "xno"; then                  
   AC_MSG_ERROR([thrift is required; please install or specify path to thrift compiler])   
fi

PKG_CHECK_MODULES(THRIFT, [thrift],
                  AC_DEFINE([HAVE_THRIFT], [1], [Define to 1 if you have the thrift library (-lthrift)]))
PKG_CHECK_MODULES(THRIFTNB, [thrift-nb], 
                  AC_DEFINE([HAVE_THRIFTNB], [1], [Define to 1 if you have the thriftnb library (-lthriftnb)]))

AX_LIB_EVENT([1.1])
if test "x$ax_have_libevent" != "xyes"; then
AC_MSG_ERROR([libevent is required; please install development libraries])   
fi

# memcached
AC_ARG_WITH(memcached,
    AC_HELP_STRING([--with-memcached],
                   [build in memcached backend support (default is yes]),
    [with_memcached=$withval],
    [with_memcached=yes])
if test "$with_memcached" != "no"; then
    PKG_CHECK_MODULES(MEMCACHED, [libmemcached >= 0.14],
                      AC_DEFINE([HAVE_LIBMEMCACHED], [1], [Define to 1 if you have the libmemcached library (-lmemcached)]),$SKIP)
fi


#BerkeleyDB
AX_BDB_LIB()
        
# spread
AC_ARG_WITH(spread,
    AC_HELP_STRING([--with-spread],
                   [build in spread backend support (default is no]),
    [with_spread=$withval],
    [with_spread=yes])
if test "$with_spread" != "no"; then
    AC_LANG_PUSH([C])  
    SPREAD_LIBS="-lspread"

    AC_MSG_CHECKING(Spread Version)  
                                                                                                                                                                   
    AC_TRY_RUN([
#include <sp.h>
#include <stdio.h>
int main(void)
{
    int v = SPREAD_VERSION;
    int p = ( (4 << 24) | ( 0 << 16) | 0 );
	
    printf("%d ",v);
    if (v < p) //only use spread > 4.0.0
        return 1;
    return 0;
}       
],                                                                                                                                                            
      [AC_MSG_RESULT(OK) AC_DEFINE(HAVE_LIBSPREAD,1,Define if new Spread API) AC_SUBST(SPREAD_LIBS)],
      [AC_MSG_RESULT(no)]  )   

fi

# s3
AC_ARG_WITH(s3,
    AC_HELP_STRING([--with-s3],
                   [build in S3 backend support (default is yes]),
    [with_s3=$withval],
    [with_s3=yes])
if test "$with_s3" != "no"; then
    # expat
    AC_CHECK_LIB(expat, [open], [],
                 AC_MSG_ERROR([You must install expat; please install libraries and development files]))
    AC_CHECK_HEADERS([expat.h],,
                     AC_MSG_ERROR([expat.h missing; please add expat development files]))

    # curl
    PKG_CHECK_MODULES(CURL, [libcurl],
                      AC_DEFINE([HAVE_LIBCURL], [1], [Define to 1 if you have the libcurl library (-lcurl)]),$SKIP)
fi

# mysql
AC_ARG_WITH(mysql,
    AC_HELP_STRING([--with-mysql],
                   [build in mysql backend support (default is yes]),
    [with_mysql=$withval],
    [with_mysql=yes])
if test "$with_mysql" != "no"; then
   AX_LIB_MYSQL([4.0.0])
fi

# uuid
PKG_CHECK_MODULES(UUID, [uuid],
                      AC_DEFINE([HAVE_LIBUUID], [1], [Define to 1 if you have the libuuid library (-luuid)]))

#boost
AX_BOOST_BASE([1.33.1])
AX_BOOST_FILESYSTEM
if test "x$link_filesystem" != "xyes"; then
    AC_MSG_ERROR([libboost filesystem is required; please install development libraries])   
fi
AX_BOOST_SYSTEM


# ssl
if test "$with_disk" != "no" -o "$with_s3" != "no"; then
    PKG_CHECK_MODULES(SSL, [libssl],
                      AC_DEFINE([HAVE_LIBSSL], [1], [Define to 1 if you have the libssl library (-lssl)]))
    AC_CHECK_LIB([ssl],[ssl3_new],,
                 AC_MSG_ERROR([OpenSSL developer library 'libssl' not installed; cannot continue.]))
    AC_CHECK_LIB([crypto],[MD5_Update],,
                 AC_MSG_ERROR([OpenSSL developer library 'libcrypto' not installed; cannot continue.]))
    AC_CHECK_HEADERS([openssl/md5.h])
    AC_CHECK_HEADERS([openssl/hmac.h])
fi

# poll.h, for poll function
AC_CHECK_HEADERS([poll.h],,
                 AC_MSG_ERROR([poll.h missing; please can not continue]))


# misc
AC_C_CONST
AC_CHECK_FUNCS([clock_gettime gettimeofday memset poll socket strcasecmp strchr strdup])
AC_CHECK_HEADERS([netinet/in.h stdlib.h string.h sys/param.h sys/time.h])
AC_C_INLINE
AC_FUNC_ALLOCA
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_REALLOC
AC_FUNC_STRFTIME
AC_HEADER_STDBOOL
AC_HEADER_STDC
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_INT16_T
AC_TYPE_INT32_T
AC_TYPE_INT64_T
AC_TYPE_SIZE_T
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T
AC_TYPE_UINT8_T

AC_CONFIG_FILES([Makefile
                 examples/Makefile
                 src/Makefile
                 src/thrudoc.pc])
AC_OUTPUT
