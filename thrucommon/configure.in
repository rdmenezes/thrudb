AC_PREREQ(2.61)

AC_INIT([thrucommon], [0.1], [bugs@thrudb.org])
AC_CONFIG_AUX_DIR(config)
AM_INIT_AUTOMAKE
AC_CONFIG_SRCDIR([thrucommon_config.h.in])
AC_CONFIG_HEADER(thrucommon_config.h)

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LIBTOOL
AC_PROG_MAKE_SET

# libcppunit, optional
AC_ARG_WITH(tests,
    AC_HELP_STRING([--with-tests],
                   [build test suite support, requires cppunit (default is no]),
    [with_tests=$withval],
    [with_tests=yes])
if test "x$with_tests" = "xyes"; then
    AM_PATH_CPPUNIT(1.9.6)
    if test "x$no_cppunit" != "xyes" ; then
        AC_DEFINE([HAVE_CPPUNIT], [1], [Define to 1 if you have the cppunit library (-lcppunit)])
    fi
fi

AC_LANG(C++)


# thrift(nb) and related requirements
AC_PATH_PROG(THRIFT, thrift, no, $PATH:/usr/local/bin:/usr/bin)
if test "x$THRIFT" = "xno"; then                  
   AC_MSG_ERROR([thrift is required; please install or specify path to thrift compiler])   
fi

PKG_CHECK_MODULES(THRIFT, [thrift],
                  AC_DEFINE([HAVE_THRIFT], [1], [Define to 1 if you have the thrift library (-lthrift)]))

AX_LIB_EVENT([1.1])
if test "x$ax_have_libevent" != "xyes"; then
AC_MSG_ERROR([libevent is required; please install development libraries])   
fi

# spread
AC_ARG_WITH(spread,
    AC_HELP_STRING([--with-spread],
                   [build in spread backend support (default is no]),
    [with_spread=$withval],
    [with_spread=yes])
if test "$with_spread" != "no"; then
    AC_LANG_PUSH([C])  

    AC_MSG_CHECKING(Spread Version)  
                                                                                                                                                                   
    AC_TRY_RUN([
#include <sp.h>
#include <stdio.h>
int main(void)
{
    int v = SPREAD_VERSION;
    int p = ( (4 << 24) | ( 0 << 16) | 0 );
	
    printf("%d ",v);
    if (v < p) //only use spread > 4.0.0
        return 1;
    return 0;
}       
],                                                                                                                                                            
      [AC_MSG_RESULT(OK) AC_DEFINE(HAVE_LIBSPREAD,1,Define if new Spread API)],
      [AC_MSG_RESULT(no)]  )   

fi

# uuid
AC_ARG_WITH(uuid,
    AC_HELP_STRING([--with-uuid],
                   [build in uuid support (putValue) (default is yes]),
    [with_uuid=$withval],
    [with_uuid=yes])
if test "$with_uuid" != "no"; then
    PKG_CHECK_MODULES(UUID, [uuid],
                      AC_DEFINE([HAVE_LIBUUID], [1], [Define to 1 if you have the libuuid library (-luuid)]))
fi

# ssl
PKG_CHECK_MODULES(SSL, [libssl],
                      AC_DEFINE([HAVE_LIBSSL], [1], [Define to 1 if you have the libssl library (-lssl)]))
AC_CHECK_HEADERS([openssl/md5.h])

# boost filesystem
AX_BOOST_BASE([1.33.1])
AX_BOOST_FILESYSTEM



# misc
AC_C_CONST
AC_CHECK_FUNCS([clock_gettime fdatasync fsync gettimeofday memset socket strcasecmp strchr strdup])
AC_CHECK_HEADERS([netinet/in.h stdlib.h string.h sys/param.h cstdlib])
AC_C_INLINE
AC_FUNC_ALLOCA
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_REALLOC
AC_FUNC_STRFTIME
AC_HEADER_STDBOOL
AC_HEADER_STDC
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_INT16_T
AC_TYPE_INT32_T
AC_TYPE_INT64_T
AC_TYPE_SIZE_T
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T
AC_TYPE_UINT8_T

AC_CHECK_FUNCS([pow strerror strndup])
AC_CHECK_HEADERS([sys/time.h])
AC_FUNC_MBRTOWC
AC_FUNC_STAT

AC_PROG_RANLIB

AC_CONFIG_FILES([Makefile
                 src/Makefile
                 src/thrucommon.pc
                 tests/Makefile])
AC_OUTPUT
